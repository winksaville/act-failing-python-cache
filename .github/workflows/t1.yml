name: t1

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:

    name: Linux build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python cache
        id: python-cache
        uses: actions/cache@v2
        with:
          path: opt/hostedtoolcache/Python/3.8.1/x64
          #path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.pythonLocation }}

      - name: Display python info
        run: |
          echo steps.python-cache.map=${{ steps.python-cache.map }}
          echo matirx.python-version=${{ matrix.python-version }}
          echo env.pythonLocation=${{ env.pythonLocation }}
          ls -al ${{ env.pythonLocation }}

      - name: Display
        run: |
          echo matirx.python-version ${{ matrix.python-version }}
          echo HI

      #- name: Install dependencies
      #  #if: steps.python-cache.outputs.cache-hit != 'true'
      #  run: |
      #    python -m pip install --upgrade pip
      #    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      #    if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
      #- name: Lint with flake8
      #  run: |
      #    # stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      #- name: Test with pytest
      #  run: |
      #    pytest
