name: t1

on: [ push, workflow_dispatch ]

jobs:
  build:

    name: Linux build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python cache
        id: python-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python/3.6.12/x64
          key: ${{ runner.os }}-python-3.6.12-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-3.6.12

      - name: Display python info
        run: |
          python --version
          echo matirx.python-version=${{ matrix.python-version }}
          echo steps.python-cache.outputs.cache-hit=${{ steps.python-cache.outputs.cache-hit }}
          echo env.pythonLocation=${{ env.pythonLocation }}
          echo steps.python-cache: ${{ steps.python-cache }}
          echo steps.python-cache.uses: ${{ steps.python-cache.uses }}
          echo steps.python-cache.with: ${{ steps.python-cache.with }}
          echo steps.python-cache.with.path: ${{ steps.python-cache.with.path }}
          echo steps.python-cache.with.key: ${{ steps.python-cache.with.key }}
          echo steps.python-cache.with.restore-keys: ${{ steps.python-cache.with.restore-keys }}
          ls -al ${{ env.pythonLocation }}

      - name: Test if cache hit is true
        if: ${{ steps.python-cache.outputs.cache-hit == 'true' }}
        run:  echo steps.python-cache.outputs.cache-hit is true

      - name: Test if cache hit is not true
        if: ${{ steps.python-cache.outputs.cache-hit != 'true' }}
        run:  echo steps.python-cache.outputs.cache-hit is NOT true

      - name: Always
        if: ${{ always() }}
        run:  echo Done

      - name: Done
        run:  echo Done
